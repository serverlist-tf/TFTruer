# THANKS SPAENNY
name: Build for Windows & Linux

on:
  push:
    # branches: [ main ]
    tags: [ '*' ]
  # pull_request:
  #   branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build-windows:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
        clean: true

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -A Win32

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Upload binaries to release
      if: github.event_name != 'pull_request'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: D:\a\TFTruer\TFTruer\build\RelWithDebInfo\tftruer.dll
        asset_name: tftruer.dll
        tag: ${{ github.ref }}
        overwrite: true

    - name: copy Binary
      run: cp D:\a\TFTruer\TFTruer\build\RelWithDebInfo\tftruer.dll D:\a\TFTruer\TFTruer\release\tftruer.dll

    - name: Commit files
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git submodule deinit -f source-sdk-2013 || true
        git submodule deinit -f hl2sdk-tf2 || true
        # rm hl2sdk* -Rfv
        # rm source-sdk* -Rfv
        git pull origin main -X theirs --prune --recurse-submodules --force
        git add .
        git commit -m "Update Windows binary" -a
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main

  build-linux:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
        clean: true

    - name: Get dependencies
      run: sudo apt-get install -y linux-libc-dev-i386-cross gcc-multilib g++-multilib

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Upload binaries to release
      if: github.event_name != 'pull_request'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: /home/runner/work/TFTruer/TFTruer/build/tftruer.so
        asset_name: tftruer.so
        tag: ${{ github.ref }}
        overwrite: true

    - name: copy Binary
      run: cp /home/runner/work/TFTruer/TFTruer/build/tftruer.so /home/runner/work/TFTruer/TFTruer/release/tftruer.so -vf

    - name: Commit files
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git submodule deinit -f source-sdk-2013 || true
        git submodule deinit -f hl2sdk-tf2 || true
        # rm hl2sdk* -Rfv
        # rm source-sdk* -Rfv
        git pull origin main -X theirs --prune --recurse-submodules --force
        git add .
        git commit -m "Update Linux binary" -a
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
